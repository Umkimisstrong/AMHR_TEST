@model Contract.UserContract


@{
    ViewBag.Title = "MyPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* Main Layer *@
<main style="padding-left:50px; width:90%;">
    <div class="row" style="justify-content:center;">
        <section class="col-md-12" aria-labelledby="gettingStartedTitle" style="justify-content:center; width:30%;">
            <fieldset style="justify-content: center; max-width: 282px; margin-top: 30px;">
                <div style="text-align:center;">
                    <h1>
                        Information
                    </h1>
                    <hr />
                </div>
                <div>
                    <label for="exampleInputId1" class="form-label mt-4">Id</label>
                    <div style="display:flex;">
                        @Html.TextBoxFor(m => m.UserEntity.USER_ID, new { @class = "form-control", @id = "exampleInputId1", @disabled = "disabled" })
                    </div>
                </div>
                <div>
                    <label for="exampleSelect1" class="form-label mt-4">User Type</label>
                    @Html.DropDownListFor(m => m.UserEntity.USER_TYPE, new SelectList(ViewBag.SELECT_LIST_USER_TYPE, "Value", "Text", Model.UserEntity.USER_TYPE), new { @id = "exampleSelect1", @class = "form-select" })
                    
                </div>

                <div>
                    <label for="exampleTextarea" class="form-label mt-4">Description</label>
                    @Html.TextAreaFor(m => m.UserEntity.USER_DESCRIPTION, new { @class = "form-control", @id = "exampleTextarea", @rows = "3", @maxlength = "300" })
                </div>


            </fieldset>
            <fieldset style="justify-content:center; max-width:282px;">
                <div>
                    <label for="exampleInputName1" class="form-label mt-4">Name</label>
                    @Html.TextBoxFor(m => m.UserEntity.USER_NM, new { @class = "form-control", @id = "exampleInputName1" })
                </div>
                @*<div>
                    <label for="exampleInputEmail1" class="form-label mt-4">Email address</label>
                    @Html.TextBoxFor(m => m.UserEntity.USER_EMAIL, new { @type = "email", @class = "form-control", @id="exampleInputEmail1"})
                    <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                </div>*@

                <fieldset>
                    <legend class="mt-4">Usable</legend>
                    <div class="form-check">
                        @Html.RadioButton("USE_YN", "Y", Model.UserEntity.USE_YN.Equals("Y"), new { @id = "optionsRadios1", @class = "form-check-input" })
                        <label class="form-check-label" for="optionsRadios1">
                            Use
                        </label>
                    </div>
                    <div class="form-check">
                        @Html.RadioButton("USE_YN", "N", Model.UserEntity.USE_YN.Equals("N"), new { @id = "optionsRadios2", @class = "form-check-input" })
                        <label class="form-check-label" for="optionsRadios2">
                            Not Used
                        </label>
                    </div>
                </fieldset>

                <hr />
                <div style="text-align:center; margin-top:15px;">
                    <button type="button" class="btn btn-primary" onclick="requestUpdateUser()">Submit</button>
                </div>
            </fieldset>
        </section>
    </div>
</main>
@* Main Layer *@

@* Script Layer *@
@section scripts
{
    <script type="text/javascript">

        var ID_CHECK_FLAG = false;

        /*
            requestUpdateUser : 회원가입
        */
        function requestUpdateUser() {
            if (validateData()) {
                MsgBox.Confirm("저장하시겠습니까?", function resultFlag(flag) {
                    if (flag) {
                        saveData();
                    }
                    else {
                        return;
                    }
                });
            }
            else {
                return;
            }

        }

        /*
            validateData : 유효성 검사
        */
        function validateData() {

            var userDescription = $("#exampleTextarea").val();
            if (userDescription.trim() == "") {
                MsgBox.Alert("설명을 입력하세요.", function () { $("#exampleTextarea").focus(); });
                return false;
            }

            var userName = $("#exampleInputName1").val();
            if (userName.trim() == "") {
                MsgBox.Alert("이름을 입력하세요.", function () { $("#exampleInputName1").focus(); });
                return false;
            }

            
            return true;
        }

        /*
            saveData : 사용자 Data 저장
        */
        function saveData() {
            var obj = {
                UserEntity: {}
            };

            obj.UserEntity.USER_NM = $("#exampleInputName1").val();
            obj.UserEntity.USER_TYPE = $("#exampleSelect1").val();
            obj.UserEntity.USER_DESCRIPTION = $("#exampleTextarea").val();
            obj.UserEntity.USE_YN = $("input[name='USE_YN']:checked").val();

            $.ajax({
                url: "/User/UpdateUser"
                , data: { contract: obj }
                , type: "post"
                , success: function (data) {

                    if (data.RESULT) {
                        MsgBox.Inform("회원정보가 수정되었습니다.", function () { window.location.reload(); });
                    }
                    else {
                        MsgBox.Warning("예상치 못한 오류가 발생하였습니다. 관리자에게 문의하십시오.");
                    }
                }
                , error: function (data) {
                    MsgBox.Danger(
                        setErrCustomContents(data)
                    );

                }
            });

        }
    </script>
}
@* Script Layer *@




