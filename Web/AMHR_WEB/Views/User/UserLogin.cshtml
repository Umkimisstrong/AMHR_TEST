
@{
    ViewBag.Title = "UserLogin";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string MESSAGE = ViewBag.MESSAGE.ToString();
}

<main >
    
    <div class="row" style="justify-content:center; margin-top:100px;">
        <div class="card  mb-12" style="max-width: 30rem; box-shadow: 0 4px 16px rgba(17, 17, 26, .05), 0 8px 32px rgba(17, 17, 26, .05); border-color:white;" >
            <div class="card-header bg-white" style="text-align:center;">
                <p style="font-size:40px; font-weight:bold;">Welcome !</p>
                <p style="font-size: 18px;  color: #797979;">Sign in AMHR.</p>
            </div>
            <div class="card-body">
                <div>
                    <label for="exampleInputId1" class="form-label mt-4" style="font-size:15px; font-weight:bold; color:dimgrey;">Id</label>
                    <div style="display:flex;">
                        <input type="text" class="form-control" id="exampleInputId1" placeholder="Enter Id" style="max-width:600px;">
                    </div>
                </div>
                <div>
                    <label for="exampleInputPassword1" class="form-label mt-4" style="font-size:15px; font-weight:bold; color:dimgrey;">Password</label>
                    <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password" autocomplete="off" style="max-width:600px;">
                </div>
                <div style="margin-top:35px;">
                    <button type="button" class="btn btn-primary" onclick="requestSignIn()" style="max-width:600px; width:100%;">Login</button>
                    <button type="button" class="btn " onclick="requestKakaoSignIn()" style="max-width: 600px; width: 100%; margin-top: 15px; background-color: #FEE500; display: flex; align-items: center; justify-content: space-between; ">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-fill" viewBox="0 0 16 16">
                        <path d="M8 15c4.418 0 8-3.134 8-7s-3.582-7-8-7-8 3.134-8 7c0 1.76.743 3.37 1.97 4.6-.097 1.016-.417 2.13-.771 2.966-.079.186.074.394.273.362 2.256-.37 3.597-.938 4.18-1.234A9 9 0 0 0 8 15" />
                        </svg> Login with Kakao
                        <span></span>
                    </button>
                    @*<button type="button" class="btn" onclick="requestKakaoSignIn()" style="margin-top:15px; max-width:600px; width:100%; height:65px; background-size:cover; background-image:url(/StaticContents/images/kakao_login_large_wide.png)"></button>*@

                    <div style="justify-content:space-between; align-items:center; display:flex; margin-top:25px;">
                        <a href="#">Forgot ID?</a>
                        <a href="#">Forgot PW?</a>
                    </div>
                </div>
                <hr />
                <div style="text-align:center;">
                    <p style="font-size: 18px; color: #797979;">
                        Don't have an account?  @Html.ActionLink("Sign Up", "UserSignup", "User", null, new { @class=""})
                    </p>
                </div>
            </div>
        </div>
    </div>



</main>

@section scripts
{
    <script type="text/javascript">
        /*
            DOM 준비
        */
        $(function () {
            informMessage();
        });

        /*
            informMessage : 로그인 페이지 진입 시 알려야할 메시지가 있다면 안내한다.
        */
        function informMessage()
        {
            var message = '@MESSAGE';
            if (message != "")
            {
                MsgBox.Inform(message);
            }
        }

        /*
            requestKakaoSignIn : 카카오 로그인 버튼 클릭 시 이동한다.
        */
        function requestKakaoSignIn()
        {
            location.href = "/Kakao/KakaoLogin";
        }

        /*
            requestSignIn : 로그인
        */
        function requestSignIn()
        {
            if (validateData())
            {
                loginData();
            }
            else
            {
                return;
            }
        }


        /*
            validateData : 유효성 검사
        */
        function validateData()
        {
            var useriD = $("#exampleInputId1").val();
            if (useriD.trim() == "") {
                MsgBox.Alert("ID를 입력하세요.");
                return false;
            }

            var userPassword1 = $("#exampleInputPassword1").val();
            if (userPassword1.trim() == "")
            {
                MsgBox.Alert("비밀번호를 입력하세요.");
                return false;
            }

            return true;
        }

        /*
            loginData : 사용자 Data 로그인
        */
        function loginData()
        {
            var obj = {
                UserEntity: {}
            };

            obj.UserEntity.USER_ID = $("#exampleInputId1").val();
            obj.UserEntity.USER_PWD = $("#exampleInputPassword1").val();

            $.ajax({
                url: "/User/LoginCheckUser"
                , data: {
                    contract: obj
                    , returnUrl : ""
                }
                , type: "post"
                , success: function (data)
                {
                    //alert(data);
                    if (data.RESULT == "OK")
                    {
                        location.href = "/Home/Index";
                    }
                    else if (data.RESULT == "NO")
                    {
                        //alert("아이디 또는 비밀번호가 잘못되었습니다.");
                        MsgBox.Warning("아이디 또는 비밀번호가 잘못되었습니다.")
                    }
                    else
                    {
                        MsgBox.Danger(data.RESULT);
                    }
                }
                , error: function (data)
                {
                    MsgBox.Danger(
                                     setErrCustomContents(data)
                                  );
                }
            });

        }
    </script>
}


