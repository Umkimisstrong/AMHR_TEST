@model Contract.FileContract
@* 
    FileUploadArea
    - Partial View 로 활용되는 파일업로드 영역
    - 멀티파일 업로드 가능 (최대 10개)
    - Add : 로컬 디렉토리에서 첨부할 파일을 Upload
    - Delete : 선택된 Row 파일 제거
    - Cancel : 각 Row 별 제거
    
*@

@{ Layout = null; }
@{ 
    var CONST_DOWNLOADFILELIST = new List<Entity.FileEntity> ();

    if(Model != null)
    {
        if(Model.FileList != null && Model.FileList.Count >0)
        {
            CONST_DOWNLOADFILELIST = Model.FileList;
        }
    }
}

<!DOCTYPE html>
<!--
/*
 * jQuery File Upload Demo
 * https://github.com/blueimp/jQuery-File-Upload
 *
 * Copyright 2010, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 */
-->
<html lang="en">
<head>
    <!-- Force latest IE rendering engine or ChromeFrame if installed -->
    <!--[if IE]>
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <![endif]-->
    <meta charset="utf-8" />
    <title>jQuery File Upload Demo</title>
    <meta name="description"
          content="File Upload widget with multiple file selection, drag&amp;drop support, progress bars, validation and preview images, audio and video for jQuery. Supports cross-domain, chunked and resumable file uploads and client-side image resizing. Works with any server-side platform (PHP, Python, Ruby on Rails, Java, Node.js, Go etc.) that supports standard HTML form file uploads." />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="~/Content/css/jquery.fileupload.css" />
    <link rel="stylesheet" href="~/Content/css/jquery.fileupload-ui.css" />
    <!-- CSS adjustments for browsers with JavaScript disabled -->
    <noscript>
        <link rel="stylesheet" href="~/Content/css/jquery.fileupload-noscript.css" />
    </noscript>
    <noscript>
        <link rel="stylesheet" href="~/Content/css/jquery.fileupload-ui-noscript.css" />
    </noscript>

</head>
<body>
    <div class="container" style="margin-top:30px;">
        <!-- The file upload form used as target for the file upload widget -->
        <form id="fileupload"
              action="https://jquery-file-upload.appspot.com/"
              method="POST"
              enctype="multipart/form-data">
            <!-- Redirect browsers with JavaScript disabled to the origin page -->
            <noscript>
                <input type="hidden"
                       name="redirect"
                       value="https://blueimp.github.io/jQuery-File-Upload/" />
            </noscript>
            <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
            <div class="row fileupload-buttonbar">
                <div class="col-lg-7">
                    <!-- The fileinput-button span is used to style the file input field as button -->
                    <span class="btn btn-success fileinput-button">
                        <i class="glyphicon glyphicon-plus"></i>
                        <span>Add files...</span>
                        <input type="file" name="files" multiple id="attFileBtn" onchange="AddBtnClick()" />
                    </span>
                    @*<button type="submit" class="btn btn-primary start">
                            <i class="glyphicon glyphicon-upload"></i>
                            <span>Start upload</span>
                        </button>*@
                    @*<button type="reset" class="btn btn-warning cancel">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel upload</span>
                        </button>*@
                    <button type="button" class="btn btn-warning cancel" onclick="CancelAllBtnClick()">
                        <i class="glyphicon glyphicon-ban-circle"></i>
                        <span>Cancel selected</span>
                    </button>
                    <button type="button" class="btn btn-danger" onclick="DeleteAllBtnClick()">
                        <i class="glyphicon glyphicon-trash"></i>
                        <span>Delete selected</span>
                    </button>
                </div>


            </div>
            <!-- The table listing the files available for upload/download -->
            <table role="presentation" class="table table-striped">
                <tbody class="files" id="uploadFilesArea">
                    @*<tr class="template-upload">
                            <td>
                                <input type="checkbox" class="form-check" id="file_0"/>
                            </td>
                            <td>
                                <p class="name">ABCD.txt</p>
                                <strong class="error text-danger">파일 확장자로 허용되지 않습니다.</strong>
                            </td>
                            <td>
                                <p class="name">1024 bytes</p>
                            </td>
                            <td>
                                <p class="name">txt</p>
                            </td>
                            <td>
                                <button class="btn btn-warning cancel">
                                    <i class="glyphicon glyphicon-ban-circle"></i>
                                    <span>Cancel</span>
                                </button>
                            </td>
                        </tr>*@
                </tbody>
                <tbody class="files" id="downloadFilesArea">
                    <tr class="template-download" id="trDown_101">
                        <td>
                            <input type="checkbox" class="form-check" id="fileDown_101" name="chkFileDownRow" />
                        </td>
                        <td>
                            <p class="name">
                                <a href="/AttachFiles/Find/2024/07/klhglksdlfdllsf" title="다운로드파일명" download="다운로드파일명">다운로드파일명</a>
                            </p>
                        </td>
                        <td>
                            <span class="size">1024 byte</span>
                        </td>
                        <td>
                            <p class="name">txt</p>
                        </td>
                        <td>
                            <button class="btn btn-danger delete" type="button" onclick="DeleteBtnEachRowClick('101')">
                                <i class="glyphicon glyphicon-ban-circle"></i>
                                <span>Delete</span>
                            </button>
                        </td>
                    </tr>
                    <tr class="template-download" id="trDown_123">
                        <td>
                            <input type="checkbox" class="form-check" id="fileDown_123" name="chkFileDownRow" />
                        </td>
                        <td>
                            <p class="name">
                                <a href="/AttachFiles/Find/2024/07/klhglksdlfdllsf" title="다운로드파일명2" download="다운로드파일명2">다운로드파일명2</a>
                            </p>
                        </td>
                        <td>
                            <span class="size">1024 byte</span>
                        </td>
                        <td>
                            <p class="name">txt</p>
                        </td>
                        <td>
                            <button class="btn btn-danger delete" type="button"  onclick="DeleteBtnEachRowClick('123')">
                                <i class="glyphicon glyphicon-ban-circle"></i>
                                <span>Delete</span>
                            </button>
                        </td>
                    </tr>

                </tbody>
            </table>
            <!-- The main application script -->
        </form>
    </div>
    <!-- The template to display files available for upload -->
    <script id="template-upload" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-upload fade{%=o.options.loadImageFileTypes.test(file.type)?' image':''%}">
                <td>
                    <span class="preview"></span>
                </td>
                <td>
                    <p class="name">{%=file.name%}</p>
                    <strong class="error text-danger"></strong>
                </td>
                <td>
                    <p class="size">Processing...</p>
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
                </td>
                <td>
                    {% if (!o.options.autoUpload && o.options.edit && o.options.loadImageFileTypes.test(file.type)) { %}
                      <button class="btn btn-success edit" data-index="{%=i%}" disabled>
                          <i class="glyphicon glyphicon-edit"></i>
                          <span>Edit</span>
                      </button>
                    {% } %}
                    {% if (!i && !o.options.autoUpload) { %}
                        <button class="btn btn-primary start" disabled>
                            <i class="glyphicon glyphicon-upload"></i>
                            <span>Start</span>
                        </button>
                    {% } %}
                    {% if (!i) { %}
                        <button class="btn btn-warning cancel">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel</span>
                        </button>
                    {% } %}
                </td>
            </tr>
        {% } %}
    </script>
    <!-- The template to display files available for download -->
    <script id="template-download" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-download fade{%=file.thumbnailUrl?' image':''%}">
                <td>
                    <span class="preview">
                        {% if (file.thumbnailUrl) { %}
                            <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                        {% } %}
                    </span>
                </td>
                <td>
                    <p class="name">
                        {% if (file.url) { %}
                            <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                        {% } else { %}
                            <span>{%=file.name%}</span>
                        {% } %}
                    </p>
                    {% if (file.error) { %}
                        <div><span class="label label-danger">Error</span> {%=file.error%}</div>
                    {% } %}
                </td>
                <td>
                    <span class="size">{%=o.formatFileSize(file.size)%}</span>
                </td>
                <td>
                    {% if (file.deleteUrl) { %}
                        <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                            <i class="glyphicon glyphicon-trash"></i>
                            <span>Delete</span>
                        </button>
                        <input type="checkbox" name="delete" value="1" class="toggle">
                    {% } else { %}
                        <button class="btn btn-warning cancel">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel</span>
                        </button>
                    {% } %}
                </td>
            </tr>
        {% } %}
    </script>
    <script type="text/javascript">

        /* 전역변수 dataTransfer : File 정보를 동적으로 Control 하기 위한 객체 */
        const dataTransfer = new DataTransfer();

        const dataTransfer2 = new DataTransfer();

        
        /* 전역변수 strUploadObj : Upload 한 파일정보를 JSON.stringify 한 문자열 */
        var strUploadObj = "";

        /* 전역변수 strDeleteObj : Delete 한 파일정보를 JSON.stringify 한 문자열 */
        var strDeleteObj = "";

        /* 전역변수 deleteFileObj : Delete 한 파일정보를 배열 객체로 관리하는 변수 */
        var deleteFileObj = [];

        /*
            AddBtnClick : Add 버튼 클릭 후 File 선택하고 나면 발동하는 함수
        */
        function AddBtnClick() {
            var fileListObj = $("#fileupload")[0].files.files;      // input type files 에 선택된 파일 정보를 가져온다.
            if (fileListObj != null && fileListObj != undefined)    // 선택한 파일이 존재하는 경우 실행
            {
                Array.from(fileListObj).forEach(file => {
                    dataTransfer.items.add(file);                   // 파일갯수만큼 dataTransfer 객체에 넣는다.
                });
                var TemplateUpload = SetUploadTemplate(dataTransfer);   // Upload 할 파일 목록을 문자열로 만들어서 Html에 입힐 준비
                $("#fileupload")[0].files = dataTransfer.files;         // dataTransfer 의 file 로 input type files 목록을 최신화
            }

            $("#uploadFilesArea").html(TemplateUpload);                 // 최종적으로 Upload 할 file 목록을 사용자에게 table 형식으로 노출
        }

        /*
            CancelBtnEachRowClick : 파일 목록에서 cancel 버튼으로 하나씩 없애는 함수
        */
        function CancelBtnEachRowClick(cancelRowIdx) {
            dataTransfer.items.remove(cancelRowIdx);    // 전역변수 dataTransfer 객체에서 해당 인덱스의 파일을 삭제한다.
            $("#fileupload")[0].files.files = dataTransfer.files;   // input type files 목록을 지우고 난 dataTransfer 객체의 파일목록으로 재설정한다.

            var TemplateUpload = SetUploadTemplate(dataTransfer);   // Upload 할 파일 목록을 최신화하여 문자열로 만들고 Html에 입힐 준비(삭제한걸 제외시킨다)
            $("#uploadFilesArea").html(TemplateUpload);             // 최종적으로 Upload 할 file 목록을 사용자에게 table 형식으로 노출
        }

        /*
            CancelAllBtnClick : Upload 한 파일 중 선택된 파일들을 삭제한다.
        */
        function CancelAllBtnClick() {
            var chkObj = $("input[name='chkFileRow']:checked");
            if (chkObj != null && chkObj != undefined) {
                if (chkObj.length > 0) {
                    for (var i = chkObj.length - 1; i >= 0; i--) {
                        var deleteRowIdx = chkObj[i].id.replace('chk_', '');
                        dataTransfer.items.remove(deleteRowIdx);                // 반복문으로 remove 하는 경우 인덱스가 참조되지 않을 수 있기 때문에 거꾸로 반복
                    }

                    $("#fileupload")[0].files.files = dataTransfer.files;   // input type files 목록을 지우고 난 dataTransfer 객체의 파일목록으로 재설정한다.
                    var TemplateUpload = SetUploadTemplate(dataTransfer);   // Upload 할 파일 목록을 최신화하여 문자열로 만들고 Html에 입힐 준비(삭제한걸 제외시킨다)
                    $("#uploadFilesArea").html(TemplateUpload);             // 최종적으로 Upload 할 file 목록을 사용자에게 table 형식으로 노출
                }
            }
        }

        /*
            DeleteAllBtnClick : Upload 된 파일 중 선택된 파일들을 삭제한다.
        */
        function DeleteAllBtnClick() {
            var chkObj = $("input[name='chkFileDownRow']:checked");
            if (chkObj != null && chkObj != undefined) {
                if (chkObj.length > 0) {
                    for (var i = chkObj.length - 1; i >= 0; i--) {

                        var deleteRowId = "#" + chkObj[i].id.replace('fileDown_', 'trDown_');
                        SetDeleteObjAndString(chkObj[i].id.replace('fileDown_', ''));
                        $(deleteRowId).remove();
                    }
                }
            }
        }

        /*
            DeleteBtnEachRowClick : 파일 목록에서 delete 버튼으로 하나씩 없애는 함수
        */
        function DeleteBtnEachRowClick(cancelRowId) {

            SetDeleteObjAndString(cancelRowId);

            var deleteTargetTrId = "#trDown_" + cancelRowId;
            $(deleteTargetTrId).remove();
            
        }


        function SetDeleteObjAndString(fileSeq)
        {
            var UploadFilesResult = {};
            UploadFilesResult.FILE_SEQ = fileSeq;
            deleteFileObj.push(UploadFilesResult);

            if (deleteFileObj != null && deleteFileObj != undefined) {
                strDeleteObj = JSON.stringify(deleteFileObj);
            }
        }

        /*
            SetUploadTemplate : 문자열로 파일목록을 만들어서 Return
        */
        function SetUploadTemplate(fileListObj) {
            // fileListObj 는 dataTransfer 형식을 넘겨받음으로써 FileList 의 길이와 내용에 접근가능하다.
            // 해당 내용으로 반복문을 돌면서 파일정보를 목록 문자열로 만들어서 리턴한다.
            // 동적인 컨트롤을 하기 때문에 인덱스를 활용한다.
            var length = fileListObj.files.length;
            var TemplateUpload = "";
            if (length > 0) {
                for (var i = 0; i < length; i++) {

                    var addedFileName = fileListObj.files[i].name;
                    var addedFileSize = fileListObj.files[i].size;
                    var addedFileType = fileListObj.files[i].name.substring(addedFileName.lastIndexOf('.')).replace('.', '');

                    TemplateUpload += "<tr class='template-upload' id='trFile_" + i + "'>";
                    TemplateUpload += "<td>";
                    TemplateUpload += "<input type='checkbox' class='form-check' name='chkFileRow' id='chk_" + i + "'>";
                    TemplateUpload += "</td>";

                    TemplateUpload += "<td>";
                    TemplateUpload += "<p class='name'>";
                    TemplateUpload += addedFileName;
                    TemplateUpload += "</p>";
                    TemplateUpload += "</td>";

                    TemplateUpload += "<td>";
                    TemplateUpload += "<p class='name'>";
                    TemplateUpload += addedFileSize + " bytes";
                    TemplateUpload += "</p>";
                    TemplateUpload += "</td>";

                    TemplateUpload += "<td>";
                    TemplateUpload += "<p class='name'>";
                    TemplateUpload += addedFileType;
                    TemplateUpload += "</p>";
                    TemplateUpload += "</td>";

                    TemplateUpload += "<td>";
                    TemplateUpload += "<button class='btn btn-warning cancel' type='button' onclick='CancelBtnEachRowClick(" + i + ")'>";
                    TemplateUpload += "<i class='glyphicon glyphicon-ban-circle'></i>";
                    TemplateUpload += "<span>Cancel</span>";
                    TemplateUpload += "</button>";
                    TemplateUpload += "</td>";

                    TemplateUpload += "</tr>";
                }
            }

            return TemplateUpload;
        }


        function StartFileUpload() {
            var fileListObj = $("#fileupload")[0].files.files;

            if (fileListObj.length > 0) {
                // ajax 업로드 시작
                var formData = new FormData();

                for (var i = 0; i < fileListObj.length; i++) {
                    formData.append("file" + i, fileListObj[i]);
                }


                $.ajax({
                    url: "/AttachFiles/Upload",
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (data) {
                        console.log(data);
                        strUploadObj = JSON.stringify(data);
                    },
                    error: function (xhr, status, p3, p4) {

                    }
                });

            }
        }

        // 테스트
        function SaveFile() {
            $.ajax({
                url: "/AttachFiles/SaveFile?UploadFileString=" + strUploadObj + "&DeleteFileString=" + strDeleteObj,
                type: "GET",
                contentType: false,
                processData: false,
                success: function () {

                },
                error: function (xhr, status, p3, p4) {

                }
            });
        }
    </script>
</body>
</html>