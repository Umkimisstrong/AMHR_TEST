@model Contract.BoardContract
@{
    ViewBag.Title = "BoardSave";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string generalFlag = ViewBag.GENERAL_FLAG.ToString();

    @* Global User Session Info Area *@
    var user = User as System.Security.Claims.ClaimsPrincipal;
    var userInfo = new AMHR_WEB.Models.UserSessionModel();
    if (user != null)
    {
        var claims = user.Claims.ToList();
        var sessionClaim = claims.FirstOrDefault(o => o.Type == AMHR_WEB.Models.Constants.UserSession);
        if (sessionClaim != null)
        {
            userInfo = AMHR_WEB.GlobalAttribute.GlobalHelper.stringToObject<AMHR_WEB.Models.UserSessionModel>(sessionClaim.Value);
        }
    }

    @* 
        Model 에 쓰일 fileContract 정보를 세팅한다.
        fileContract 정보에 FileList 를 담게되는데 BoardContract 에서 담아온다.
    *@
    Contract.FileContract fileContract = new Contract.FileContract();
    if(Model.FileContract.FileList != null && Model.FileContract.FileList.Count>0)
    { 
        fileContract.FileList = Model.FileContract.FileList;
    }
}

@* Main Layer *@
<main style="padding-left:0;">
    <div class="row" style="justify-content:center;">
        <form method="post" action="/Board/SaveBoard" id="CONST_SAVE_FORM">

            <section class="col-md-12" aria-labelledby="gettingStartedTitle" style="justify-content:center; width:100%;">

                <fieldset style="justify-content:center;">
                    <div style="text-align:center;">
                        <h1>
                            Board
                        </h1>
                        <hr />
                        <div style="text-align:right; margin-top:10px;">
                            <div style="padding-right:0;">
                                <button type="button" class="btn bg-primary btn-sm text-white" onclick="BoardList('@Model.BoardEntity.BRD_CATEGORY', '@Model.BoardEntity.BRD_DIV')">Back to List</button>
                                @if (userInfo != null)
                                {
                                    if (userInfo.USER_ID != null && userInfo.USER_ID.Equals(Model.BoardEntity.BRD_WRITE_ID))
                                    {
                                        <button type="button" class="btn bg-danger btn-sm text-white" onclick="BoardDelete()">Delete Board</button>
                                    }
                                }
                            </div>

                        </div>
                    </div>
                    <div>
                        <label for="Brd_Title" class="form-label mt-4" style="font-weight:bold;">Title</label>
                        <div style="display:flex;">
                            @Html.TextBoxFor(m => m.BoardEntity.BRD_TITLE, new { @type = "text", @class = "form-control", @id = "Brd_Title", @placeholder = "Write Title", @style = "max-width:1400px;" })
                            @*<input type="text" class="form-control" id="exampleInputId1" placeholder="Write Title" style="max-width:1400px;">*@
                        </div>
                    </div>
                    <div>
                        <label for="Brd_Contents" class="form-label mt-4" style="font-weight:bold;">Contents</label>
                        @Html.TextAreaFor(m => m.BoardEntity.BRD_CONTENTS, new { @class = "form-control", @id = "Brd_Contents", @placeholder = "Write Contents", @style = "max-width:1400px;", @rows = "17" })
                        @*<textarea class="form-control" placeholder="Write Contents" style="max-width:1400px;" rows="17"></textarea>*@

                        @Html.HiddenFor(m => m.BoardEntity.BRD_SEQ, new { @id = "Brd_Seq" })
                        @Html.HiddenFor(m => m.BoardEntity.BRD_CATEGORY, new { @id = "Brd_Category" })
                        @Html.HiddenFor(m => m.BoardEntity.BRD_DIV, new { @id = "Brd_Div" })
                        @Html.Hidden("GeneralFlag", "CREATE", new { @id = "Hidden_GeneralFlag" })

                        @* File Info *@
                        @Html.HiddenFor(m => m.FileContract.UploadFileString, new { @id = "UploadFileString" })
                        @Html.HiddenFor(m => m.FileContract.DeleteFileString, new { @id = "DeleteFileString" })
                    </div>
                    <hr />

                </fieldset>
            </section>

        </form>
        <section>
            @* FileUploadArea 를 RenderPartial 한다. *@
            @{Html.RenderPartial("FileUploadArea", fileContract);}
        </section>
        <div class="row" style="margin-top:10px;">
            <section class="col-md-12" aria-labelledby="gettingStartedTitle" style="text-align:center;">
                <div>
                    @if (
                        (generalFlag.Equals(Contract.ENUM.EnumProperties.GeneralFlag.CREATE.ToString()) && userInfo != null)
                        ||
                        (generalFlag.Equals(Contract.ENUM.EnumProperties.GeneralFlag.UPDATE.ToString()) && userInfo.USER_ID != null && userInfo.USER_ID.Equals(Model.BoardEntity.BRD_WRITE_ID))

                        )
                    {
                        <button type="button" class="btn btn-primary" onclick="requestSaveBoard()">Submit</button>
                    }

                </div>
            </section>
        </div>
    </div>
</main>
@* Main Layer *@

@* Script Layer *@
@section scripts
{
    <script type="text/javascript">

        var ID_CHECK_FLAG = false;

        $(function () {
            var generalFlag = '@generalFlag';
            $("#Hidden_GeneralFlag").val(generalFlag);

        });

        /*
            requestSaveBoard : 게시판 저장 요청
        */
        function requestSaveBoard() {
            if (validateData()) {
                saveData();
            }
            else {
                return;
            }

        }

        /*
            validateData : 유효성 검사
        */
        function validateData() {
            var brdTitle = $("#Brd_Title").val();
            if (brdTitle.trim() == "") {
                MsgBox.Alert("제목을 입력하세요.", function () { $("#Brd_Title").focus(); });
                return false;
            }
            var brdContents = $("#Brd_Contents").val();
            if (brdContents.trim() == "") {
                MsgBox.Alert("내용을 입력하세요.", function () { $("#Brd_Contents").focus(); });
                return false;
            }

            return true;
        }

        /*
            saveData : 게시판 데이터 저장
        */
        function saveData()
        {

            MsgBox.Confirm("저장하시겠습니까?", function resultFlag(flag) {
                if (flag)
                {
                    // uploadFilesArea 의 tr 정보가 있다면
                    // file을 add 한 것으로 판단하고
                    // StartFileUpload()를 호출하여 ajax 로 물리파일업로드를 진행한다.
                    // 결과를 반환받아서 전체 Form 을 Submit 한다.
                    if ($("#uploadFilesArea").find("tr").length>0)
                    {
                        var fileSaveResult = StartFileUpload();
                        if (fileSaveResult)
                        {
                            $("#CONST_SAVE_FORM").submit();
                        }
                    }
                    // 파일 정보가 없는 경우 전체 Form 을 Submit 한다.
                    else
                    {
                        $("#CONST_SAVE_FORM").submit();
                    }
                    
                }
                else {
                    return;
                }
            });
        }

        /*
            BoardList : 게시판 목록 돌아가기
        */
        function BoardList(brd_category, brd_div)
        {
            location.href = "/Board/BoardList?BRD_CATEGORY=" + brd_category + "&BRD_DIV=" + brd_div;
        }


        /*
            BoardDelete : 게시판 삭제 요청
        */
        function BoardDelete()
        {
            MsgBox.Confirm("삭제하시겠습니까?", function resultFlag(flag) {
                if (flag) {
                    deleteData();
                }
                else {
                    return;
                }
            });
        }

        /*
            deleteData : 삭제 작업
        */
        function deleteData()
        {
            var obj = {
                BoardEntity: {}
            };

            obj.BoardEntity.BRD_SEQ = '@Model.BoardEntity.BRD_SEQ';
            obj.BoardEntity.BRD_CATEGORY = '@Model.BoardEntity.BRD_CATEGORY';
            obj.BoardEntity.BRD_DIV = '@Model.BoardEntity.BRD_DIV';

            $.ajax({
                url: "/Board/DeleteBoard"
                , data: {
                    contract: obj
                }
                , type: "post"
                , success: function (data) {
                    //alert(data);
                    if (data.RESULT) {
                        MsgBox.Inform("삭제 되었습니다.", function () { location.href = "/Board/BoardList?BRD_CATEGORY=" + '@Model.BoardEntity.BRD_CATEGORY' + "&BRD_DIV=" + '@Model.BoardEntity.BRD_DIV'});

                    }
                    else {
                        MsgBox.Danger("삭제 실패하였습니다.");
                    }
                }
                , error: function (data) {
                    MsgBox.Danger(
                        setErrCustomContents(data)
                    );
                }
            });
        }

    </script>
}
@* Script Layer *@




